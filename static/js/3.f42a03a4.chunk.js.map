{"version":3,"sources":["Components/Profile/ProfileInfo/ProfileInfo.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/classnames/index.js","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/Post/Post.module.css","Components/Profile/Post/Post.jsx","Components/Profile/MyPosts/MyPostsForm.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileInfo/ProfileStatusHooks.jsx","img/thumbDown.svg","img/thumbUp.svg","img/youtube.svg","img/instagram.svg","img/twitter.svg","img/facebook.svg","img/website.svg","img/github.svg","img/mainLink.svg","Components/Profile/ProfileInfo/Contact.jsx","img/vk.svg","img/edit.svg","Components/Profile/ProfileInfo/ProfileData.jsx","img/save.svg","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","inner","apply","key","call","join","default","Post","postInfo","userAvatar","message","likeCount","className","s","postBlock","post","avatar","src","alt","text","likes","button","maxLengthText","maxLength","Textarea","Element","reduxForm","form","props","newPost","onSubmit","handleSubmit","Field","component","name","textarea","placeholder","validate","required","addButton","MyPosts","postsInfo","userProfile","addPost","postElements","map","photos","small","userPhoto","id","myPosts","subtitle","formData","posts","dispatchObject","connect","state","profilePage","newPostText","ProfileStatusHooks","userStatus","updateStatus","useState","editMode","setEditMode","statusText","setStatusText","deactivateEditMode","statusBlock","onDoubleClick","editStatus","statusInput","autoFocus","onBlur","onChange","event","target","onKeyDown","e","code","contactLogo","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Contact","contactKey","contacts","contact","href","includes","rel","ProfileData","profile","isOwner","goToEditMode","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","userInfo","nameBlock","editButton","onClick","editImage","edit","jobStatus","question","jobStatusImage","thumbUp","thumbDown","userContacts","keys","Input","error","nameInput","input","save","checkboxLine","type","checkbox","userContactsEdit","userContactEdit","cn","errorField","active","ProfileInfo","saveUploadedPhoto","saveProfile","Preloader","profileInfo","informationBlock","avatarImage","large","avatarChange","avatarInputHidden","files","initialValues","quitEditMode","then","Profile","MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.f42a03a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3laMU\",\"informationBlock\":\"ProfileInfo_informationBlock__2FJWo\",\"userInfo\":\"ProfileInfo_userInfo__3ragr\",\"avatar\":\"ProfileInfo_avatar__3NPfm\",\"avatarImage\":\"ProfileInfo_avatarImage__2p6iw\",\"avatarChange\":\"ProfileInfo_avatarChange__3Raq_\",\"avatarInputHidden\":\"ProfileInfo_avatarInputHidden__2qRQi\",\"nameBlock\":\"ProfileInfo_nameBlock__2yFvY\",\"name\":\"ProfileInfo_name__XbNsr\",\"editButton\":\"ProfileInfo_editButton__10Ks4\",\"editImage\":\"ProfileInfo_editImage__19Gcv\",\"jobStatus\":\"ProfileInfo_jobStatus__2XdjV\",\"aboutMe\":\"ProfileInfo_aboutMe__35K7P\",\"userContacts\":\"ProfileInfo_userContacts__1AnA7\",\"question\":\"ProfileInfo_question__2TvgL\",\"jobStatusImage\":\"ProfileInfo_jobStatusImage__keZaj\",\"contact\":\"ProfileInfo_contact__rb3FY\",\"statusBlock\":\"ProfileInfo_statusBlock__3YymL\",\"statusText\":\"ProfileInfo_statusText__2ic7o\",\"statusInput\":\"ProfileInfo_statusInput__3r77-\",\"editStatus\":\"ProfileInfo_editStatus__140yW\",\"input\":\"ProfileInfo_input__2ayyQ\",\"nameInput\":\"ProfileInfo_nameInput__mvpnp\",\"checkboxLine\":\"ProfileInfo_checkboxLine__1Ny76\",\"checkbox\":\"ProfileInfo_checkbox__3t-4h\",\"textarea\":\"ProfileInfo_textarea__1xJL3\",\"errorField\":\"ProfileInfo_errorField__2rjB5\",\"active\":\"ProfileInfo_active__2tdU7\",\"userContactsEdit\":\"ProfileInfo_userContactsEdit__1xhHF\",\"userContactEdit\":\"ProfileInfo_userContactEdit__2Jaov\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3HdBM\",\"posts\":\"MyPosts_posts__KHChe\",\"subtitle\":\"MyPosts_subtitle__xGorV\",\"newPost\":\"MyPosts_newPost__28B6O\",\"textarea\":\"MyPosts_textarea__1e2j5\",\"addButton\":\"MyPosts_addButton__2ysiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Post_postBlock__1ivsN\",\"post\":\"Post_post__2b-da\",\"avatar\":\"Post_avatar__33r0Y\",\"text\":\"Post_text__APccQ\",\"likes\":\"Post_likes__EYPXV\",\"button\":\"Post_button__3Ar6O\"};","import s from \"./Post.module.css\";\r\n\r\nconst Post = ({ postInfo, userAvatar }) => {\r\n    const { message, likeCount } = postInfo;\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div className={s.post}>\r\n                <img className={s.avatar} src={userAvatar} alt=\"avatar\" />\r\n                <p className={s.text}>{message}</p>\r\n            </div>\r\n            <div className={s.likes}>\r\n                <button className={s.button}></button>\r\n                {likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength, required } from \"../../../utils/validators/validators\";\r\nimport { Element } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLengthText = maxLength(200);\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form className={s.newPost} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name=\"textarea\"\r\n                className={s.textarea}\r\n                placeholder=\"Write new post here\"\r\n                validate={[required, maxLengthText]}\r\n            />\r\n            <button className={s.addButton}>Add new post</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({ form: \"newPost\" })(MyPostsForm);\r\n","import s from \"./MyPosts.module.css\";\r\nimport Post from \"./../Post/Post\";\r\nimport React from \"react\";\r\nimport MyPostsForm from \"./MyPostsForm\";\r\nimport userPhoto from \"../../../img/account.svg\";\r\n\r\nconst MyPosts = ({ postsInfo, userProfile, addPost }) => {\r\n    let postElements = postsInfo.map((postInfo) => (\r\n        <Post\r\n            postInfo={postInfo}\r\n            userAvatar={userProfile ? userProfile.photos.small : userPhoto}\r\n            key={postInfo.id}\r\n        />\r\n    ));\r\n\r\n    const onAddPost = (formData) => {\r\n        addPost(formData.textarea);\r\n    };\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h2 className={s.subtitle}>My posts</h2>\r\n            <MyPostsForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>{postElements}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { postsInfo, newPostText, userProfile } = state.profilePage;\r\n    return { postsInfo, newPostText, userProfile };\r\n};\r\n\r\nconst dispatchObject = { addPost };\r\n\r\nexport default connect(mapStateToProps, dispatchObject)(MyPosts);\r\n","import { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusHooks = ({ userStatus, updateStatus, ...props }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [statusText, setStatusText] = useState(userStatus);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        updateStatus(statusText);\r\n    };\r\n\r\n    const onChangeStatus = (event) => {\r\n        setStatusText(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={s.statusBlock}>\r\n            {!editMode && (\r\n                <div className={s.statusText}>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {userStatus ? userStatus : \"No status\"}\r\n                    </span>\r\n                </div>\r\n            )}\r\n            {editMode && (\r\n                <div className={s.editStatus}>\r\n                    <input\r\n                        className={s.statusInput}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onChangeStatus}\r\n                        onKeyDown={(e) => {\r\n                            if (e.code === \"Enter\") {\r\n                                deactivateEditMode();\r\n                            }\r\n                        }}\r\n                        value={statusText}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusHooks;\r\n","export default __webpack_public_path__ + \"static/media/thumbDown.6c6922b4.svg\";","export default __webpack_public_path__ + \"static/media/thumbUp.2d0dd251.svg\";","export default __webpack_public_path__ + \"static/media/youtube.cb1a5678.svg\";","export default __webpack_public_path__ + \"static/media/instagram.6ed2cb52.svg\";","export default __webpack_public_path__ + \"static/media/twitter.5ae9f4cf.svg\";","export default __webpack_public_path__ + \"static/media/facebook.98aa7037.svg\";","export default __webpack_public_path__ + \"static/media/website.5ef68a8a.svg\";","export default __webpack_public_path__ + \"static/media/github.04be58c1.svg\";","export default __webpack_public_path__ + \"static/media/mainLink.73cb4430.svg\";","import s from \"./ProfileInfo.module.css\";\r\nimport youtube from \"../../../img/youtube.svg\";\r\nimport instagram from \"../../../img/instagram.svg\";\r\nimport twitter from \"../../../img/twitter.svg\";\r\nimport facebook from \"../../../img/facebook.svg\";\r\nimport website from \"../../../img/website.svg\";\r\nimport github from \"../../../img/github.svg\";\r\nimport mainLink from \"../../../img/mainLink.svg\";\r\nimport vk from \"../../../img/vk.svg\";\r\n\r\nconst contactLogo = {\r\n    facebook,\r\n    website,\r\n    vk,\r\n    twitter,\r\n    instagram,\r\n    youtube,\r\n    github,\r\n    mainLink,\r\n};\r\n\r\nconst Contact = ({ contactKey: key, contacts }) => {\r\n    return (\r\n        <a\r\n            className={s.contact}\r\n            href={\r\n                contacts[key].includes(\"https://\")\r\n                    ? contacts[key]\r\n                    : `https://${contacts[key]}`\r\n            }\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n        >\r\n            <img src={contactLogo[key]} alt={key} />\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","export default __webpack_public_path__ + \"static/media/vk.5489041b.svg\";","export default __webpack_public_path__ + \"static/media/edit.836f7dde.svg\";","import s from \"./ProfileInfo.module.css\";\r\nimport thumbDown from \"../../../img/thumbDown.svg\";\r\nimport thumbUp from \"../../../img/thumbUp.svg\";\r\nimport Contact from \"./Contact\";\r\nimport edit from \"../../../img/edit.svg\";\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n    const {\r\n        aboutMe,\r\n        contacts,\r\n        lookingForAJob,\r\n        lookingForAJobDescription,\r\n        fullName,\r\n    } = profile;\r\n    return (\r\n        <div className={s.userInfo}>\r\n            <div className={s.nameBlock}>\r\n                <h3 className={s.name}>{fullName}</h3>\r\n                {isOwner && (\r\n                    <button className={s.editButton} onClick={goToEditMode}>\r\n                        <img className={s.editImage} src={edit} alt=\"edit\" />\r\n                    </button>\r\n                )}\r\n            </div>\r\n            <div className={s.jobStatus}>\r\n                <p className={s.question}>Looking for a job:</p>\r\n                <img\r\n                    className={s.jobStatusImage}\r\n                    src={lookingForAJob ? thumbUp : thumbDown}\r\n                    alt=\"hm\"\r\n                />\r\n                <p>{lookingForAJobDescription}</p>\r\n            </div>\r\n            <div className={s.aboutMe}>\r\n                <p className={s.question}>About me:</p>\r\n                <p>{aboutMe}</p>\r\n            </div>\r\n            <div className={s.userContacts}>\r\n                <p className={s.question}>Contacts:</p>\r\n                {Object.keys(contacts).map(\r\n                    (key) =>\r\n                        contacts[key] && (\r\n                            <Contact\r\n                                key={key}\r\n                                contactKey={key}\r\n                                contacts={contacts}\r\n                            />\r\n                        )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileData;\r\n","export default __webpack_public_path__ + \"static/media/save.1d2830c7.svg\";","import s from \"./ProfileInfo.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nimport save from \"../../../img/save.svg\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Element } from \"../../common/FormsControls/FormsControls\";\r\nimport { maxLength } from \"../../../utils/validators/validators\";\r\n\r\nconst Input = Element(\"input\");\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst maxLengthText = maxLength(150);\r\n\r\nconst ProfileDataForm = ({ contacts, handleSubmit, error }) => {\r\n    return (\r\n        <form className={s.userInfo} onSubmit={handleSubmit}>\r\n            <div className={s.nameBlock}>\r\n                <h3 className={s.name}>Full name: </h3>\r\n                <Field\r\n                    component={Input}\r\n                    name=\"fullName\"\r\n                    className={`${s.nameInput} ${s.input}`}\r\n                />\r\n                <button className={s.editButton}>\r\n                    <img className={s.editImage} src={save} alt=\"save\" />\r\n                </button>\r\n            </div>\r\n            <div className={s.jobStatus}>\r\n                <p className={s.question}>Looking for a job:</p>\r\n                <div className={s.checkboxLine}>\r\n                    <Field\r\n                        component={Input}\r\n                        type=\"checkbox\"\r\n                        name={\"lookingForAJob\"}\r\n                        className={s.checkbox}\r\n                        validate={maxLengthText}\r\n                    />\r\n                    <label>Yes/No</label>\r\n                </div>\r\n            </div>\r\n            <Field\r\n                component={Textarea}\r\n                placeholder={\"My professional skills\"}\r\n                className={s.textarea}\r\n                name={\"lookingForAJobDescription\"}\r\n                validate={maxLengthText}\r\n            ></Field>\r\n            <div className={s.aboutMe}>\r\n                <p className={s.question}>About me:</p>\r\n            </div>\r\n            <Field\r\n                component={Textarea}\r\n                placeholder={\"About me\"}\r\n                className={s.textarea}\r\n                name={\"aboutMe\"}\r\n            ></Field>\r\n            <p className={s.question}>Contacts:</p>\r\n            <div className={`${s.userContacts} ${s.userContactsEdit}`}>\r\n                {Object.keys(contacts).map((key) => (\r\n                    <div className={s.userContactEdit} key={key}>\r\n                        <span>{key}:</span>\r\n                        <Field\r\n                            component={Input}\r\n                            placeholder={key}\r\n                            name={\"contacts.\" + key}\r\n                            className={s.input}\r\n                        />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {/* <div className={`${s.errorField} ${error ? s.active : \"\"}`}>\r\n                {error}\r\n            </div> */}\r\n            <div className={cn(s.errorField, { [s.active]: error })}>\r\n                {error}\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({ form: \"profileInfo\" })(ProfileDataForm);\r\n","import { useState } from \"react\";\r\n\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport userPhoto from \"../../../img/account.svg\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nimport ProfileData from \"./ProfileData\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({\r\n    isOwner,\r\n    userProfile,\r\n    userStatus,\r\n    updateStatus,\r\n    saveUploadedPhoto,\r\n    saveProfile,\r\n}) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!userProfile) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    const onMainImageSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            saveUploadedPhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => setEditMode(false));\r\n    };\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.informationBlock}>\r\n                <div className={s.avatar}>\r\n                    <img\r\n                        className={s.avatarImage}\r\n                        src={userProfile.photos.large || userPhoto}\r\n                        alt=\"avatar\"\r\n                    />\r\n                    {isOwner && (\r\n                        <label className={s.avatarChange}>\r\n                            Change the avatar\r\n                            <input\r\n                                className={s.avatarInputHidden}\r\n                                type=\"file\"\r\n                                onChange={onMainImageSelected}\r\n                            />\r\n                        </label>\r\n                    )}\r\n                </div>\r\n                {editMode ? (\r\n                    <ProfileDataForm\r\n                        initialValues={userProfile}\r\n                        contacts={userProfile.contacts}\r\n                        quitEditMode={() => setEditMode(false)}\r\n                        onSubmit={onSubmit}\r\n                    />\r\n                ) : (\r\n                    <ProfileData\r\n                        profile={userProfile}\r\n                        isOwner={isOwner}\r\n                        goToEditMode={() => setEditMode(true)}\r\n                    />\r\n                )}\r\n            </div>\r\n            <ProfileStatusHooks\r\n                userStatus={userStatus}\r\n                updateStatus={updateStatus}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import s from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({\r\n    isOwner,\r\n    userProfile,\r\n    userStatus,\r\n    updateStatus,\r\n    saveUploadedPhoto,\r\n    saveProfile,\r\n}) => {\r\n    return (\r\n        <>\r\n            <ProfileInfo\r\n                isOwner={isOwner}\r\n                userProfile={userProfile}\r\n                userStatus={userStatus}\r\n                updateStatus={updateStatus}\r\n                saveUploadedPhoto={saveUploadedPhoto}\r\n                saveProfile={saveProfile}\r\n            />\r\n            <MyPostsContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    saveUploadedPhoto,\r\n    saveProfile,\r\n} from \"../../redux/profile-reducer\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                userId = this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    userStatus: state.profilePage.userStatus,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.id,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateStatus,\r\n        saveUploadedPhoto,\r\n        saveProfile,\r\n    }),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}