{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/MessageBlock/Message/Message.module.css","Components/Dialogs/MessageBlock/NewMessage/NewMessage.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/MessageBlock/Message/Message.jsx","Components/Dialogs/MessageBlock/NewMessage/NewMessage.jsx","Components/Dialogs/MessageBlock/MessageBlock.jsx","Components/Dialogs/Dialogs.jsx","Components/hoc/Redirect/withAuthRedirect.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","to","usersDataElement","id","dialogName","activeClassName","active","src","avatarSrc","avatar","alt","name","toString","Message","text","author","userAvatar","message","userAuthor","friendAuthor","friendAvatar","userPhoto","maxLengthText","maxLength","Textarea","Element","reduxForm","form","newMessage","onSubmit","handleSubmit","Field","component","textarea","placeholder","validate","required","addButton","MessagesBlock","messages","onAddMessage","map","formData","Dialogs","dialogsPage","profilePage","usersData","usersDataElements","userData","dialogs","dialogsItem","MessageBlock","userProfile","photos","small","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","connect","dispatchObject","compose"],"mappings":"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","file":"static/js/4.efb1cfaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3MEOg\",\"dialogsItem\":\"Dialogs_dialogsItem__1ZR3j\",\"messages\":\"Dialogs_messages__ampMQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__26Dot\",\"dialogName\":\"DialogItem_dialogName__11DFL\",\"active\":\"DialogItem_active__2igAE\",\"avatar\":\"DialogItem_avatar__3C9a-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__VPBKB\",\"friendAuthor\":\"Message_friendAuthor__t996I\",\"userAuthor\":\"Message_userAuthor__or3ot\",\"avatar\":\"Message_avatar__neX-D\",\"friendAvatar\":\"Message_friendAvatar__JU50x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newMessage\":\"NewMessage_newMessage__W_ALx\",\"textarea\":\"NewMessage_textarea__3wsba\",\"addButton\":\"NewMessage_addButton__3GELI\"};","import s from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog} key={props.usersDataElement.id.toString()}>\r\n            <NavLink\r\n                to={`/dialogs/${props.usersDataElement.id}`}\r\n                className={s.dialogName}\r\n                activeClassName={s.active}\r\n            >\r\n                <img\r\n                    src={props.usersDataElement.avatarSrc}\r\n                    className={s.avatar}\r\n                    alt=\"avatar\"\r\n                />\r\n                {props.usersDataElement.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;\r\n","import s from \"./Message.module.css\";\r\nimport userPhoto from \"../../../../img/account.svg\";\r\n\r\nconst Message = ({ text, id, author, userAvatar }) => {\r\n    return (\r\n        <>\r\n            <div\r\n                key={id.toString()}\r\n                className={`${s.message} ${\r\n                    author === \"user\" ? s.userAuthor : s.friendAuthor\r\n                }`}\r\n            >\r\n                <img\r\n                    className={`${s.avatar} ${\r\n                        author === \"user\" ? \"\" : s.friendAvatar\r\n                    }`}\r\n                    src={author === \"user\" ? userAvatar : userPhoto}\r\n                    alt=\"avatar\"\r\n                />\r\n                {text}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Message;\r\n","import s from \"./NewMessage.module.css\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Element } from \"../../../common/FormsControls/FormsControls\";\r\nimport { maxLength, required } from \"../../../../utils/validators/validators\";\r\n\r\nconst maxLengthText = maxLength(100);\r\n\r\nconst Textarea = Element(\"textarea\");\r\n\r\nconst NewMessage = (props) => {\r\n    return (\r\n        <form className={s.newMessage} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                className={s.textarea}\r\n                name={\"textarea\"}\r\n                placeholder=\"Write new message here\"\r\n                validate={[required, maxLengthText]}\r\n            />\r\n            <button className={s.addButton}>Send message</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({ form: \"addMessage\" })(NewMessage);\r\n","import Message from \"./Message/Message\";\r\nimport NewMessage from \"./NewMessage/NewMessage\";\r\n\r\nconst MessagesBlock = ({ messages, userAvatar, onAddMessage }) => {\r\n    const addMessage = (formData) => {\r\n        onAddMessage(formData.textarea);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {messages.map(({ text, id, author }) => (\r\n                <Message\r\n                    text={text}\r\n                    id={id}\r\n                    author={author}\r\n                    userAvatar={userAvatar}\r\n                    key={id.toString()}\r\n                />\r\n            ))}\r\n            <NewMessage onSubmit={addMessage} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MessagesBlock;\r\n","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageBlock from \"./MessageBlock/MessageBlock\";\r\n\r\nimport userPhoto from \"../../img/account.svg\";\r\n\r\nconst Dialogs = ({ dialogsPage, profilePage, onAddMessage, ...props }) => {\r\n    const { usersData, messages } = dialogsPage;\r\n\r\n    const usersDataElements = usersData.map((userData) => (\r\n        <DialogItem usersDataElement={userData} key={userData.id.toString()} />\r\n    ));\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>{usersDataElements}</div>\r\n            <div className={s.messages}>\r\n                <MessageBlock\r\n                    messages={messages}\r\n                    userAvatar={\r\n                        profilePage.userProfile\r\n                            ? profilePage.userProfile.photos.small\r\n                            : userPhoto\r\n                    }\r\n                    onAddMessage={onAddMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nconst withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to={\"/login\"} />;\r\n        return <Component {...props} />;\r\n    };\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n};\r\n\r\nexport default withAuthRedirect;\r\n","import Dialogs from \"./Dialogs\";\r\nimport { onAddMessage } from \"../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport withAuthRedirect from \"../hoc/Redirect/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        profilePage: state.profilePage,\r\n    };\r\n};\r\n\r\nconst dispatchObject = {\r\n    onAddMessage,\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, dispatchObject),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}