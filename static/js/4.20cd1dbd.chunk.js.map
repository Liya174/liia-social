{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/Post/Post.module.css","Components/Profile/Post/Post.jsx","Components/Profile/MyPosts/MyPostsForm.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","img/thumbDown.svg","img/thumbUp.svg","img/youtube.svg","img/instagram.svg","img/twitter.svg","img/facebook.svg","img/website.svg","img/github.svg","img/mainLink.svg","img/vk.svg","Components/Profile/ProfileInfo/ProfileStatusHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","postInfo","message","likeCount","className","s","postBlock","post","avatar","src","alt","text","likes","button","maxLengthText","maxLength","reduxForm","form","props","newPost","onSubmit","handleSubmit","Field","component","name","textarea","placeholder","validate","required","addButton","MyPosts","postElements","postsInfo","map","id","myPosts","subtitle","formData","addPost","posts","dispatchObject","connect","state","profilePage","newPostText","ProfileStatusHooks","userStatus","updateStatus","useState","editMode","setEditMode","statusText","setStatusText","statusBlock","onDoubleClick","editStatus","statusInput","autoFocus","onBlur","onChange","event","target","value","ProfileInfo","isOwner","userProfile","saveUploadedPhoto","Preloader","aboutMe","contacts","lookingForAJob","lookingForAJobDescription","fullName","photos","userId","contactLogo","facebook","website","vk","twitter","instagram","youtube","github","mainLink","userContacts","key","push","contact","href","includes","rel","profileInfo","informationBlock","avatarImage","large","userPhoto","avatarChange","avatarInputHidden","type","e","files","length","userInfo","jobStatus","question","jobStatusImage","thumbUp","thumbDown","Profile","MyPostsContainer","ProfileContainer","this","match","params","authorizedUserId","history","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.20cd1dbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__3HdBM\",\"posts\":\"MyPosts_posts__KHChe\",\"subtitle\":\"MyPosts_subtitle__xGorV\",\"newPost\":\"MyPosts_newPost__28B6O\",\"textarea\":\"MyPosts_textarea__1e2j5\",\"addButton\":\"MyPosts_addButton__2ysiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__3laMU\",\"informationBlock\":\"ProfileInfo_informationBlock__2FJWo\",\"avatar\":\"ProfileInfo_avatar__3NPfm\",\"avatarImage\":\"ProfileInfo_avatarImage__2p6iw\",\"avatarChange\":\"ProfileInfo_avatarChange__3Raq_\",\"avatarInputHidden\":\"ProfileInfo_avatarInputHidden__2qRQi\",\"name\":\"ProfileInfo_name__XbNsr\",\"jobStatus\":\"ProfileInfo_jobStatus__2XdjV\",\"aboutMe\":\"ProfileInfo_aboutMe__35K7P\",\"userContacts\":\"ProfileInfo_userContacts__1AnA7\",\"question\":\"ProfileInfo_question__2TvgL\",\"jobStatusImage\":\"ProfileInfo_jobStatusImage__keZaj\",\"contact\":\"ProfileInfo_contact__rb3FY\",\"statusBlock\":\"ProfileInfo_statusBlock__3YymL\",\"statusText\":\"ProfileInfo_statusText__2ic7o\",\"statusInput\":\"ProfileInfo_statusInput__3r77-\",\"editStatus\":\"ProfileInfo_editStatus__140yW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"Post_postBlock__1ivsN\",\"post\":\"Post_post__2b-da\",\"avatar\":\"Post_avatar__33r0Y\",\"text\":\"Post_text__APccQ\",\"likes\":\"Post_likes__EYPXV\",\"button\":\"Post_button__3Ar6O\"};","import s from \"./Post.module.css\";\r\n\r\nconst Post = ({ postInfo }) => {\r\n    const { message, likeCount } = postInfo;\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div className={s.post}>\r\n                <img\r\n                    className={s.avatar}\r\n                    src=\"https://images.unsplash.com/photo-1586710743198-3619668ad789?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=934&q=80\"\r\n                    alt=\"avatar\"\r\n                />\r\n                <p className={s.text}>{message}</p>\r\n            </div>\r\n            <div className={s.likes}>\r\n                <button className={s.button}></button>\r\n                {likeCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLength, required } from \"../../../utils/validators/validators\";\r\nimport { Element } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLengthText = maxLength(20);\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form className={s.newPost} onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={\"textarea\"}\r\n                name=\"textarea\"\r\n                className={s.textarea}\r\n                placeholder=\"Write new post here\"\r\n                validate={[required, maxLengthText]}\r\n            />\r\n            <button className={s.addButton}>Add new post</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default reduxForm({ form: \"newPost\" })(MyPostsForm);\r\n","import s from \"./MyPosts.module.css\";\r\nimport Post from \"./../Post/Post\";\r\nimport React from \"react\";\r\nimport MyPostsForm from \"./MyPostsForm\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postElements = props.postsInfo.map((postInfo) => (\r\n        <Post postInfo={postInfo} key={postInfo.id} />\r\n    ));\r\n\r\n    const onAddPost = (formData) => {\r\n        props.addPost(formData.textarea);\r\n    };\r\n\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <h2 className={s.subtitle}>My posts</h2>\r\n            <MyPostsForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>{postElements}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPost } from \"../../../redux/profile-reducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { postsInfo, newPostText } = state.profilePage;\r\n    return { postsInfo, newPostText };\r\n};\r\n\r\nconst dispatchObject = { addPost };\r\n\r\nexport default connect(mapStateToProps, dispatchObject)(MyPosts);\r\n","export default __webpack_public_path__ + \"static/media/thumbDown.6c6922b4.svg\";","export default __webpack_public_path__ + \"static/media/thumbUp.2d0dd251.svg\";","export default __webpack_public_path__ + \"static/media/youtube.cb1a5678.svg\";","export default __webpack_public_path__ + \"static/media/instagram.6ed2cb52.svg\";","export default __webpack_public_path__ + \"static/media/twitter.5ae9f4cf.svg\";","export default __webpack_public_path__ + \"static/media/facebook.98aa7037.svg\";","export default __webpack_public_path__ + \"static/media/website.5ef68a8a.svg\";","export default __webpack_public_path__ + \"static/media/github.04be58c1.svg\";","export default __webpack_public_path__ + \"static/media/mainLink.73cb4430.svg\";","export default __webpack_public_path__ + \"static/media/vk.5489041b.svg\";","import { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusHooks = ({ userStatus, updateStatus, ...props }) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [statusText, setStatusText] = useState(userStatus);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        updateStatus(statusText);\r\n    };\r\n\r\n    const onChangeStatus = (event) => {\r\n        setStatusText(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={s.statusBlock}>\r\n            {!editMode && (\r\n                <div className={s.statusText}>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {userStatus ? userStatus : \"No status\"}\r\n                    </span>\r\n                </div>\r\n            )}\r\n            {editMode && (\r\n                <div className={s.editStatus}>\r\n                    <input\r\n                        className={s.statusInput}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        onChange={onChangeStatus}\r\n                        value={statusText}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusHooks;\r\n","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport thumbDown from \"../../../img/thumbDown.svg\";\r\nimport thumbUp from \"../../../img/thumbUp.svg\";\r\nimport youtube from \"../../../img/youtube.svg\";\r\nimport instagram from \"../../../img/instagram.svg\";\r\nimport twitter from \"../../../img/twitter.svg\";\r\nimport facebook from \"../../../img/facebook.svg\";\r\nimport website from \"../../../img/website.svg\";\r\nimport github from \"../../../img/github.svg\";\r\nimport mainLink from \"../../../img/mainLink.svg\";\r\nimport vk from \"../../../img/vk.svg\";\r\nimport userPhoto from \"../../../img/account.svg\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\n\r\nconst ProfileInfo = ({\r\n    isOwner,\r\n    userProfile,\r\n    userStatus,\r\n    updateStatus,\r\n    saveUploadedPhoto,\r\n}) => {\r\n    if (!userProfile) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    const {\r\n        aboutMe,\r\n        contacts,\r\n        lookingForAJob,\r\n        lookingForAJobDescription,\r\n        fullName,\r\n        userId,\r\n        photos,\r\n    } = userProfile;\r\n\r\n    const contactLogo = {\r\n        facebook,\r\n        website,\r\n        vk,\r\n        twitter,\r\n        instagram,\r\n        youtube,\r\n        github,\r\n        mainLink,\r\n    };\r\n\r\n    const userContacts = [];\r\n    for (let key in contacts) {\r\n        if (contacts[key]) {\r\n            userContacts.push(\r\n                <a\r\n                    key={key}\r\n                    className={s.contact}\r\n                    href={\r\n                        contacts[key].includes(\"https://\")\r\n                            ? contacts[key]\r\n                            : `https://${contacts[key]}`\r\n                    }\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    <img src={contactLogo[key]} alt={key} />\r\n                </a>\r\n            );\r\n        }\r\n    }\r\n\r\n    const onMainImageSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            saveUploadedPhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.informationBlock}>\r\n                <div className={s.avatar}>\r\n                    <img\r\n                        className={s.avatarImage}\r\n                        src={photos.large || userPhoto}\r\n                        alt=\"avatar\"\r\n                    />\r\n                    {isOwner && (\r\n                        <label className={s.avatarChange}>\r\n                            Change the avatar\r\n                            <input\r\n                                className={s.avatarInputHidden}\r\n                                type=\"file\"\r\n                                onChange={onMainImageSelected}\r\n                            />\r\n                        </label>\r\n                    )}\r\n                </div>\r\n                <div className={s.userInfo}>\r\n                    <h3 className={s.name}>{fullName}</h3>\r\n                    <div className={s.jobStatus}>\r\n                        <p className={s.question}>Looking for a job:</p>\r\n                        <img\r\n                            className={s.jobStatusImage}\r\n                            src={lookingForAJob ? thumbUp : thumbDown}\r\n                            alt=\"hm\"\r\n                        />\r\n                        <p>{lookingForAJobDescription}</p>\r\n                    </div>\r\n                    <div className={s.aboutMe}>\r\n                        <p className={s.question}>About me:</p>\r\n                        <p>{aboutMe}</p>\r\n                    </div>\r\n                    <div className={s.userContacts}>\r\n                        <p className={s.question}>Contacts:</p>\r\n                        {userContacts}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ProfileStatusHooks\r\n                userStatus={userStatus}\r\n                updateStatus={updateStatus}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import s from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = ({\r\n    isOwner,\r\n    userProfile,\r\n    userStatus,\r\n    updateStatus,\r\n    saveUploadedPhoto,\r\n}) => {\r\n    return (\r\n        <>\r\n            <ProfileInfo\r\n                isOwner={isOwner}\r\n                userProfile={userProfile}\r\n                userStatus={userStatus}\r\n                updateStatus={updateStatus}\r\n                saveUploadedPhoto={saveUploadedPhoto}\r\n            />\r\n            <MyPostsContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getUserProfile,\r\n    getUserStatus,\r\n    updateStatus,\r\n    saveUploadedPhoto,\r\n} from \"../../redux/profile-reducer\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                userId = this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    userStatus: state.profilePage.userStatus,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.id,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getUserStatus,\r\n        updateStatus,\r\n        saveUploadedPhoto,\r\n    }),\r\n    withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}